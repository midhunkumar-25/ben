{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","board","setboard","turn","setturn","open","setOpen","message","setMessage","handleClose","className","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","map","box","index","wincom","i","length","com","p1","p2","p3","changeturn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ee0f8b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nfunction App() {\n  const [board, setboard] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n  const [turn, setturn] = useState(\"X\")\n  const [open, setOpen] = useState(false)\n  const [message, setMessage] = useState(\"\")\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const changeturn =(index)=>{\n    if(turn === \"X\")\n    {\n      if( board[index]==\"\"){\n        board[index]=\"X\"\n        setboard(board)\n        setturn(\"O\")\n      }\n      \n      let wincom=[\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6],\n      ]\n      for(let i=0;i<wincom.length;i++){\n        let com= wincom[i]\n        let p1=com[0]\n        let p2=com[1]\n        let p3=com[2]\n        if(board[p1] !=\"\" && board[p2] !=\"\" && board[p3] !=\"\" && board[p1]==board[p2] && board[p3]==board[p2] && board[p1]==board[p3] ){\n          //alert(`player ${turn} Won!`)\n          setOpen(true)\n          setMessage(`player ${turn} Won!`)\n          setboard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n          break\n        }\n      }\n      if(board[0] !=\"\" && board[1] !=\"\" && board[2] !=\"\" && board[3] !=\"\" && board[4] !=\"\" && board[5] !=\"\" && \n      board[6] !=\"\" && board[7] !=\"\" && board[8] !=\"\" )\n        {\n          //alert(`draw !`)\n          setOpen(true)\n          setMessage(\"draw !\")\n          setboard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n        }\n      \n\n    }\n    else{\n      if( board[index]==\"\"){\n        board[index]=\"O\"\n        setboard(board)\n        setturn(\"X\")\n      }\n      let wincom=[\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6],\n      ]\n      for(let i=0;i<wincom.length;i++){\n        let com= wincom[i]\n        let p1=com[0]\n        let p2=com[1]\n        let p3=com[2]\n        if(board[p1] !=\"\" && board[p2] !=\"\" && board[p3] !=\"\" && board[p1]==board[p2] && board[p3]==board[p2] && board[p1]==board[p3] ){\n          //alert(`player ${turn} Won!`)\n          setOpen(true)\n          setMessage(`player ${turn} Won!`)\n          setboard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n          break\n        }\n      }\n      if(board[0] !=\"\" && board[1] !=\"\" && board[2] !=\"\" && board[3] !=\"\" && board[4] !=\"\" && board[5] !=\"\" && \n      board[6] !=\"\" && board[7] !=\"\" && board[8] !=\"\" )\n        {\n          //alert(`draw !`)\n          setOpen(true)\n          setMessage(\"draw !\")\n          setboard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\n        }\n    }\n    \n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Result\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>ok</Button>\n        </DialogActions>\n        </Dialog>\n        <div className=\"board\">\n          {\n            \n            board.map((box,index) => {\n              return (\n                  <div onClick={()=>changeturn(index)} className=\"square\" >\n                    <div className=\"symbol\" >\n                    {box}</div>\n                  </div>\n              )\n            })\n          }\n          \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}